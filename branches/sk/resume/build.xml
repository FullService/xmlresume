<?xml version="1.0" encoding="UTF-8"?>

<!-- Ant build.xml file for developers of the XML Resume Library.
(c) 2000-2001 Sean Kelly and contributors.  All rights reserevd.

$Id$
-->

<project name="xmlresume" default="release" basedir=".">

  <!-- Load any user-overriding definitions -->
  <property file="${user.home}/.ant.properties"/>

  <!-- GENERAL PROPERTIES ===================================================================================================== -->

  <!-- Current version number -->
  <property name="version.underscore" value="1_3_0"/>
  <property name="version.dots" value="1.3.0"/>

  <!-- SOURCE CODE LAYOUT ===================================================================================================== -->

  <!-- Root of all source code -->
  <property name="src.dir" value="${basedir}/src"/>

  <!-- DOCUMENTATION EXTRACTION =============================================================================================== -->

  <!-- Root of constructed documentation -->
  <property name="doc.dir" value="${basedir}/doc"/>

  <!-- RELEASE CONSTRUCTION =================================================================================================== -->

  <!-- Name of built release directory -->
  <property name="release.dir" value="resume-${version.underscore}"/>

  <!-- Release layout staging area -->
  <property name="stage.dir" value="${basedir}/${release.dir}"/>
  
  <!-- Release archive filenames -->
  <property name="release.zip.name" value="resume-${version.underscore}.zip"/>
  <property name="release.tar.name" value="resume-${version.underscore}.tar"/>
  <property name="release.tgz.name" value="resume-${version.underscore}.tgz"/>

  <!-- Release archive paths -->
  <property name="release.zip" value="${basedir}/${release.zip.name}"/>
  <property name="release.tar" value="${basedir}/${release.tar.name}"/>
  <property name="release.tgz" value="${basedir}/${release.tgz.name}"/>

  <!-- TARGETS TO BUILD ======================================================================================================= -->

  <!-- Documentation generation -->

  <target name="doc"
	  description="Generate all documentation"
	  depends="doc.prepare, doc.manuals"/>
	  
  <target name="doc.prepare"
	  description="Prepare the documentation directory">
    <mkdir dir="${doc.dir}"/>
  </target>

  <target name="doc.manuals"
	  description="Generate manual files"
	  depends="filter, doc.prepare">
    <copy todir="${doc.dir}"
	  filtering="yes">
      <fileset dir="${src.dir}/doc/release"/>
    </copy>
  </target>

  <!-- Releasing to the public -->

  <target name="release"
	  description="Build a complete public release"
	  depends="doc, release.build, release.archive"/>

  <target name="release.build"
	  description="Build a release"
	  depends="release.build.prepare, release.build.copy"/>
    
  <target name="release.build.prepare"
	  description="Prepare to stage the release">
    <mkdir dir="${stage.dir}"/>
    <mkdir dir="${stage.dir}/lib"/>
    <mkdir dir="${stage.dir}/doc"/>
    <mkdir dir="${stage.dir}/src"/>
  </target>    

  <target name="release.build.copy"
	  description="Copy files into the staging area"
	  depends="filter">
    <copy todir="${stage.dir}/doc">
      <fileset dir="${doc.dir}"/>
    </copy>
    <copy todir="${stage.dir}/src">
      <fileset dir="${src.dir}"/>
    </copy>
    <filter token="VERSION_DOTS" value="${version.dots}"/>
    <filter token="RELEASE_ZIP_NAME" value="${release.zip.name}"/>
    <filter token="RELEASE_TGZ_NAME" value="${release.tgz.name}"/>
    <filter token="RELEASE_DIR" value="${release.dir}"/>
    <copy tofile="${stage.dir}/README"
	  file="${src.dir}/doc/README.src"
	  filtering="yes"/>
  </target>

  <target name="release.archive"
	  description="Create archives of the staged release"
	  depends="release.archive.zip, release.archive.tgz"/>

  <target name="release.archive.zip"
	  description="Create the zip file release">
    <zip zipfile="${release.zip}"
	 basedir="${basedir}"
	 includes="${release.dir}/**"/>
  </target>

  <target name="release.archive.tgz"
	  description="Create the gzip'd tar file release">
    <tar tarfile="${release.tar}"
	 basedir="${basedir}"
	 includes="${release.dir}/**"/>
    <gzip zipfile="${release.tgz}"
	  src="${release.tar}"/>
    <delete file="${release.tar}"/>
  </target>

  <!-- Housekeeping -->

  <target name="filter"
	  description="Define filtering tokens">
    <filter token="VERSION_DOTS" value="${version.dots}"/>
    <filter token="RELEASE_ZIP_NAME" value="${release.zip.name}"/>
    <filter token="RELEASE_TGZ_NAME" value="${release.tgz.name}"/>
    <filter token="RELEASE_DIR" value="${release.dir}"/>
  </target>

  <target name="clean"
	  description="Remove everything that can be rebuilt"
	  depends="clean.doc, clean.release"/>

  <target name="clean.doc"
	  description="Clean out documentation that can be rebuilt">
    <delete dir="${doc.dir}"/>
  </target>

  <target name="clean.release"
	  description="Remove the release archives and staging area">
    <delete dir="${stage.dir}"/>
    <delete file="${release.zip}"/>
    <delete file="${release.tgz}"/>
  </target>

</project>
